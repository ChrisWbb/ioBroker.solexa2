{
  "version": 3,
  "sources": ["../src/Solexa2Message.ts"],
  "sourcesContent": ["class Solexa2Message {\n\n\tprivate byteArrayExt: Uint8Array;\n\n\tconstructor(byteArray: Uint8Array) {\n\t\tthis.byteArrayExt = new Uint8Array(byteArray.length + 4);\n\t\tthis.byteArrayExt.set(byteArray, 2);\n\t\tthis.messageAddLength(this.byteArrayExt);\n\t\tthis.messageAddCheckSum(this.byteArrayExt);\n\t}\n\n\tprivate messageAddLength(byteArray: Uint8Array): void {\n\t\tconst length: number = byteArray.length - 4;\n\t\tbyteArray[0] = length & 255;\n\t\tbyteArray[1] = (length >> 8) & 255;\n\t}\n\n\tprivate messageAddCheckSum(byteArray: Uint8Array): void {\n\t\tlet calculatedCheckSum = 0;\n\t\tfor (let pos = 0; pos < byteArray.length - 2; pos++) {\n\t\t\tcalculatedCheckSum += byteArray[pos] & 255;\n\t\t}\n\t\tbyteArray[byteArray.length - 2] = calculatedCheckSum & 255;\n\t\tbyteArray[byteArray.length - 1] = (calculatedCheckSum >> 8) & 255;\n\t}\n\n\tpublic getMessage() : Uint8Array {\n\t\treturn this.byteArrayExt;\n\t}\n}\n\nexport { Solexa2Message };"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,eAAe;AAAA,EAIpB,YAAY,WAAuB;AAClC,SAAK,eAAe,IAAI,WAAW,UAAU,SAAS,CAAC;AACvD,SAAK,aAAa,IAAI,WAAW,CAAC;AAClC,SAAK,iBAAiB,KAAK,YAAY;AACvC,SAAK,mBAAmB,KAAK,YAAY;AAAA,EAC1C;AAAA,EAEQ,iBAAiB,WAA6B;AACrD,UAAM,SAAiB,UAAU,SAAS;AAC1C,cAAU,KAAK,SAAS;AACxB,cAAU,KAAM,UAAU,IAAK;AAAA,EAChC;AAAA,EAEQ,mBAAmB,WAA6B;AACvD,QAAI,qBAAqB;AACzB,aAAS,MAAM,GAAG,MAAM,UAAU,SAAS,GAAG,OAAO;AACpD,4BAAsB,UAAU,OAAO;AAAA,IACxC;AACA,cAAU,UAAU,SAAS,KAAK,qBAAqB;AACvD,cAAU,UAAU,SAAS,KAAM,sBAAsB,IAAK;AAAA,EAC/D;AAAA,EAEO,aAA0B;AAChC,WAAO,KAAK;AAAA,EACb;AACD;",
  "names": []
}
